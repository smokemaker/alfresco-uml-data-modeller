//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.3.0 
// See <a href="https://javaee.github.io/jaxb-v2/">https://javaee.github.io/jaxb-v2/</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2018.11.15 at 01:23:31 AM MSK 
//


package ru.neodoc.modeller.extensions;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the ru.neodoc.modeller.extensions package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _CustomData_QNAME = new QName("http://neodoc.ru/modeller/extensions", "customData");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: ru.neodoc.modeller.extensions
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link Extensions }
     * 
     */
    public Extensions createExtensions() {
        return new Extensions();
    }

    /**
     * Create an instance of {@link Extensions.Models }
     * 
     */
    public Extensions.Models createExtensionsModels() {
        return new Extensions.Models();
    }

    /**
     * Create an instance of {@link ExtensionsData }
     * 
     */
    public ExtensionsData createExtensionsData() {
        return new ExtensionsData();
    }

    /**
     * Create an instance of {@link ExtensionData }
     * 
     */
    public ExtensionData createExtensionData() {
        return new ExtensionData();
    }

    /**
     * Create an instance of {@link CustomData }
     * 
     */
    public CustomData createCustomData() {
        return new CustomData();
    }

    /**
     * Create an instance of {@link Model }
     * 
     */
    public Model createModel() {
        return new Model();
    }

    /**
     * Create an instance of {@link ModelObject }
     * 
     */
    public ModelObject createModelObject() {
        return new ModelObject();
    }

    /**
     * Create an instance of {@link XmlObjectReference }
     * 
     */
    public XmlObjectReference createXmlObjectReference() {
        return new XmlObjectReference();
    }

    /**
     * Create an instance of {@link UmlObjectReference }
     * 
     */
    public UmlObjectReference createUmlObjectReference() {
        return new UmlObjectReference();
    }

    /**
     * Create an instance of {@link NamedParameter }
     * 
     */
    public NamedParameter createNamedParameter() {
        return new NamedParameter();
    }

    /**
     * Create an instance of {@link ModelObjectsContainer }
     * 
     */
    public ModelObjectsContainer createModelObjectsContainer() {
        return new ModelObjectsContainer();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CustomData }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link CustomData }{@code >}
     */
    @XmlElementDecl(namespace = "http://neodoc.ru/modeller/extensions", name = "customData")
    public JAXBElement<CustomData> createCustomData(CustomData value) {
        return new JAXBElement<CustomData>(_CustomData_QNAME, CustomData.class, null, value);
    }

}
